{"version":3,"sources":["Test.js","QuestionOneLiner.js","Answer.js","TasksBlock.js","TaskTypes/randoms.js","TaskTypes/Brackets.js","QuestionWithWorkings.js","QuestionTwoLiner.js","TaskTypes/maths.js","TaskTypes/Percentages.js","TaskTypes/Multiplication.js","TaskTypes/Division.js","TaskTypes/AddSub.js","TaskTypes/Fractions.js","QuestionLongTwoLiner.js","TaskTypes/Dates.js","TaskTypes/LinearEquations.js","TaskTypes/index.js","Editor.js","App.js","serviceWorker.js","index.js"],"names":["Test","className","this","props","title","blocks","map","block","getQuestionsBlock","getAnswersBlock","React","Component","QuestionOneLiner","question","Answer","answer","TasksBlock","opt","questionsPerRow","answersPerRow","questionTag","answerTag","start","count","description","tasks","generateTasks","i","task","getTask","push","number","type","onChange","e","target","value","rows","length","slice","QuestionTag","style","width","AnswerTag","answersPerColumn","Math","ceil","r","c","randoms","dice","prob","random","wdice","probMin","probMax","level","natural","max","arr","a","floor","shuffle","j","temp","vars","member","R","vMust","vRemove","n","v","vv","splice","indexOf","algebrify","nums","forEach","Number","isInteger","res","split","sort","join","memberToText","getPair","wrap","nMult","vMult","vvMult","n1st","v1st","vv1st","n2nd","v2nd","vv2nd","n3rd","v3rd","vv3rd","s1st","s2nd","tMult","t1st","t2nd","t3rd","wrapped","f1st","f2nd","f3rd","unwrapped","RemoveBrackets","AddBrackets","QuestionWithWorkings","QuestionTwoLiner","gcd","b","TYPES","PERCENTAGES","DIRECTIONS","Percentages","pct","pctMult","num_question","num_pct","direction","Multiplication","m","getNumber","AddSub","Fraction","whole","rowSpan","numerator","denominator","FractionSentence","r1","r2","members","simplifyFraction","w","d","trunc","g","getFraction","AddSubFractions","w1","n1","d1","w2","n2","d2","sign","f1","f2","addFractions","wa","na","da","MulDivFractions","multiplyFractions","QuestionLongTwoLiner","TASK_TYPES","MONTHS","DAYS","dateToText","date","getUTCDate","getUTCMonth","Dates","startDate","begin","Date","getTime","end","getRandomDate","daysUntilTheEndOfTheMonth","year","getUTCFullYear","month","daysInMonth","range","endDate","setUTCDate","getUTCDay","Member","variable","positive","abs","first","MINUS","Equation","left","right","isAllNegatives","reverse","beautify","print","attempt","Division","LinearEquations","cAll","nAll","cLeft","cRight","nRight","MAX_X","nLeft","ccLeft","nnLeft","ccRight","nnRight","equation","addLeft","addRight","Editor","tt","state","taskTypes","TaskTypes","handleTitleChange","bind","openWorksheet","event","setState","params","getCount","uparams","URLSearchParams","window","open","toString","Object","entries","getEditorBlock","onClick","App","location","search","get","keys","key","parseInt","mode","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a2cd30e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Test.css';\r\n\r\nclass Test extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className=\"test\">\r\n        <div className=\"questions\">\r\n          <h1>{this.props.title}</h1>\r\n          {this.props.blocks.map((block) => block.getQuestionsBlock())}\r\n        </div>\r\n        <div className=\"answers\">\r\n          <h1>{this.props.title} - Answer Sheet</h1>\r\n          {this.props.blocks.map((block) => block.getAnswersBlock())}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\nimport './QuestionOneLiner.css';\r\n\r\nfunction QuestionOneLiner (props) {\r\n  return (\r\n    <div className=\"question-oneliner\">\r\n      {props.question}\r\n      <div className=\"answer\">Answer</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionOneLiner;","import React from 'react';\r\nimport './Answer.css';\r\n\r\nfunction Answer (props) {\r\n  return (\r\n    <div className=\"answer-default\">\r\n      {props.answer}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Answer;","import React from 'react';\r\nimport QuestionOneLiner from './QuestionOneLiner';\r\nimport Answer from './Answer';\r\n\r\nimport './TasksBlock.css';\r\n\r\nclass TasksBlock {\r\n  constructor(opt) {\r\n    this.questionsPerRow = opt.questionsPerRow || 1;\r\n    this.answersPerRow = opt.answersPerRow || 4;\r\n    this.questionTag = opt.questionTag || QuestionOneLiner;\r\n    this.answerTag = opt.answerTag || Answer;\r\n    this.start = opt.start || 1;\r\n    this.count = opt.count;\r\n    this.title = opt.title;\r\n    this.description = opt.description || \"\";\r\n    this.tasks = [];\r\n    this.generateTasks();\r\n  }\r\n  getTask(i) {\r\n    return {\r\n      question: \"QuestionOneLiner \" + i,\r\n      answer: \"Answer \" + i\r\n    }\r\n  }\r\n  getCount() {\r\n    return this.count;\r\n  }\r\n  generateTasks() {\r\n    for(let i = 0; i < this.count; i++) {\r\n      let task = this.getTask(i);\r\n      this.tasks.push({\r\n        number: this.start + i,\r\n        question: task.question,\r\n        answer: task.answer\r\n      });\r\n    }\r\n  }\r\n  getEditorBlock() {\r\n    return (\r\n      <div className=\"editor-block\">\r\n        <div className=\"title\">{this.title}</div>\r\n        <div className=\"input\"><input type=\"text\" onChange={(e) => this.count = e.target.value}/></div>\r\n      </div>\r\n    );\r\n  }\r\n  getQuestionsBlock() {\r\n    let rows = [];\r\n    for (let i = 0; i < this.tasks.length; i += this.questionsPerRow)\r\n      rows.push(this.tasks.slice(i, i + this.questionsPerRow));\r\n    const QuestionTag = this.questionTag;\r\n    return (\r\n      <div className=\"questions-block\">\r\n        <h2>{this.title}</h2>\r\n        {/*<p className=\"instructions\">{this.description}</p>*/}\r\n        <div className=\"table-container\">\r\n        <table>\r\n          <tbody>{\r\n            rows.map(tasks => <tr>{\r\n              tasks.map(task => <td style={{width: (100/this.questionsPerRow) + '%'}}>\r\n                <div className=\"question-number\">{task.number}</div>\r\n                <QuestionTag question={task.question}/>\r\n              </td>)\r\n            }</tr>)\r\n          }\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  getAnswersBlock() {\r\n    let rows = [];\r\n    for (let i = 0; i < this.tasks.length; i += this.answersPerRow)\r\n      rows.push(this.tasks.slice(i, i + this.answersPerRow));\r\n    const AnswerTag = this.answerTag;\r\n    return (\r\n      <div className=\"answers-block\">\r\n        <h2>{this.title}</h2>\r\n        <table>\r\n          <tbody>{\r\n            rows.map(tasks => <tr>{\r\n              tasks.map(task => <td style={{width: (100/this.answersPerRow) + '%'}}>\r\n                <div className=\"answer-number\">{task.number}</div>\r\n                <AnswerTag answer={task.answer}/>\r\n              </td>)\r\n            }</tr>)\r\n          }</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n  getAnswersBlockTransposed() {\r\n    let rows = [];\r\n    let answersPerColumn = Math.ceil(this.tasks.length / this.answersPerRow);\r\n    for (let r = 0; r < answersPerColumn; r++) {\r\n      rows[r] = [];\r\n      for (let c = 0; c < this.answersPerRow; c++) {\r\n        let i = r + c * answersPerColumn;\r\n        rows[r].push(i < this.tasks.length ? this.tasks[i] : false);\r\n      }\r\n    }\r\n    const AnswerTag = this.answerTag;\r\n    return (\r\n      <div className=\"answers-block\">\r\n        <h2>{this.title}</h2>\r\n        <table>\r\n          <tbody>{\r\n            rows.map(tasks => <tr>{\r\n              tasks.map(task => task ? <td style={{width: (100/this.answersPerRow) + '%'}}>\r\n                <div className=\"answer-number\">{task.number}</div>\r\n                <AnswerTag answer={task.answer}/>\r\n              </td> : <td />)\r\n            }</tr>)\r\n          }</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksBlock;","const randoms = {\r\n  dice: (prob) => Math.random() < (prob || 0.5),\r\n  wdice: (probMin, probMax, level) => Math.random() < (probMin + level * (probMax - probMin)),\r\n  natural: (max) => Math.ceil(Math.random() * max),\r\n  arr: (a) => a.length ? a[Math.floor(Math.random() * a.length)] : false,\r\n  shuffle: (a) => {\r\n    for(let i = a.length - 1; i > 0; i--){\r\n      const j = Math.floor(Math.random() * i);\r\n      const temp = a[i];\r\n      a[i] = a[j];\r\n      a[j] = temp\r\n    }\r\n  },\r\n  vars: () => [['a','b','c'], ['x','y','z'], ['p','q','r']][Math.floor(Math.random() * 3)]\r\n};\r\n\r\nexport default randoms;","import TasksBlock from '../TasksBlock';\r\n\r\nimport R from './randoms';\r\n\r\nconst PLUS = '+';\r\nconst MINUS = '–';\r\n\r\nconst MAX_NUMBER = 9;\r\n\r\nconst member = (opt) => {\r\n  const vars = opt.vars || R.vars();\r\n  const vMust = opt.vMust;\r\n  const vRemove = opt.vRemove;\r\n  // Natural multiplier\r\n  let n = R.natural(MAX_NUMBER);\r\n  // 1st variable (a must if natural is 1)\r\n  let v = (vMust || n === 1 || R.dice()) ? (R.arr(vars) || '') : '';\r\n  // 2nd variable to make things trickier\r\n  let vv = (v && R.dice(0.2)) ? (R.arr(vars) || '') : '';\r\n  // Make sure that the 2nd variable is not equal to the 1st\r\n  if (vv && vv === v) vv = '';\r\n  // Remove variables from vars if needs be\r\n  if (vRemove && v) vars.splice(vars.indexOf(v), 1);\r\n  if (vRemove && vv) vars.splice(vars.indexOf(vv), 1);\r\n\r\n  return [n, v, vv];\r\n};\r\n\r\nfunction algebrify(arr) {\r\n  let nums = 1, vars = '';\r\n  // Separate the variables from numbers\r\n  arr.forEach((e) => {\r\n    if (Number.isInteger(e) && e) nums *= e;\r\n    else if (e) vars += e;\r\n  });\r\n  // Result\r\n  let res = (nums !== 1 || !vars) ? `${nums}` : '';\r\n  // Sort the variables alphabetically\r\n  vars = vars.split('').sort().join('');\r\n  // Add squares\r\n  for(let i = 0; i < vars.length; i++) {\r\n    res += vars[i];\r\n    if (vars[i] === vars[i + 1]) {\r\n      res += '²';\r\n      i++;\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction memberToText (n, v, vv) {\r\n  return `${!v || n !== 1 ? n : ''}${v}${vv}`;\r\n}\r\n\r\nfunction getPair (wrap) {\r\n  let vars = R.vars();\r\n\r\n  let [nMult, vMult, vvMult] = member({vars});\r\n  let [n1st, v1st, vv1st] = member({vars, vRemove: true});\r\n  let [n2nd, v2nd, vv2nd] = member({vars, vRemove: true, vMust: !v1st});\r\n  let [n3rd, v3rd, vv3rd] = member({vars, vMust: !v1st || !v2nd});\r\n\r\n  // Filter out 80% of 3rd members\r\n  if (R.dice(0.8)) n3rd = 0;\r\n\r\n  // Make sure the naturals are simplified\r\n  // Only applicable when wrapping brackets\r\n  if (wrap)\r\n    for (let n = 2; n <= n1st && n <= n2nd && (!n3rd || n <= n3rd); n++)\r\n      if (!(n1st % n) && !(n2nd % n) && (!n3rd || !(n3rd % n))) {\r\n        n1st /= n;\r\n        n2nd /= n;\r\n        n3rd /= n;\r\n        nMult *= n;\r\n      }\r\n\r\n  let s1st = R.dice() ? PLUS : MINUS;\r\n  let s2nd = R.dice() ? PLUS : MINUS;\r\n\r\n  let tMult = memberToText(nMult, vMult, vvMult);\r\n  let t1st = memberToText(n1st, v1st, vv1st);\r\n  let t2nd = memberToText(n2nd, v2nd, vv2nd);\r\n  let t3rd = memberToText(n3rd, v3rd, vv3rd);\r\n\r\n  let wrapped = `${tMult}(${t1st} ${s1st} ${t2nd}${n3rd ? ` ${s2nd} ${t3rd}` : ''})`;\r\n\r\n  let f1st = algebrify([nMult, vMult, vvMult, n1st, v1st, vv1st]);\r\n  let f2nd = algebrify([nMult, vMult, vvMult, n2nd, v2nd, vv2nd]);\r\n  let f3rd = algebrify([nMult, vMult, vvMult, n3rd, v3rd, vv3rd]);\r\n\r\n  let unwrapped = `${f1st} ${s1st} ${f2nd}${n3rd ? ` ${s2nd} ${f3rd}` : ''}`;\r\n\r\n  return {wrapped, unwrapped};\r\n}\r\n\r\nclass RemoveBrackets extends TasksBlock {\r\n  constructor (start, count) {\r\n    super({\r\n      start, count,\r\n      title: \"Remove Brackets\",\r\n      description: \"Rewrite the statement, so that it does not contain brackets\"\r\n    });\r\n  }\r\n  getTask() {\r\n    let {wrapped, unwrapped} = getPair(false);\r\n    return {question: wrapped, answer: unwrapped};\r\n  }\r\n}\r\n\r\nclass AddBrackets extends TasksBlock {\r\n  constructor (start, count) {\r\n    super({\r\n      start, count,\r\n      title: \"Add Brackets\",\r\n      description: \"Rewrite the statement, so that it contains brackets and as much as possible is removed out of the brackets\"\r\n    });\r\n  }\r\n  getTask() {\r\n    let {wrapped, unwrapped} = getPair(true);\r\n    return {question: unwrapped, answer: wrapped};\r\n  }\r\n}\r\n\r\nexport {RemoveBrackets, AddBrackets};","import React from \"react\";\r\nimport './QuestionWithWorkings.css';\r\n\r\nfunction QuestionWithWorkings (props) {\r\n  return (\r\n    <div className=\"question-with-workings\">\r\n      <div className=\"question\">{props.question}</div>\r\n      <div className=\"answer\">Answer</div>\r\n      <div className=\"workings\">Workings</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionWithWorkings;","import React from 'react';\r\nimport './QuestionTwoLiner.css';\r\n\r\nfunction QuestionTwoLiner (props) {\r\n  return (\r\n    <div className=\"question-twoliner\">\r\n      <div className=\"question\">{props.question}</div>\r\n      <div className=\"workings\">Workings</div>\r\n      <div className=\"answer\">Answer</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionTwoLiner;","function gcd(a, b) {\r\n  return b ? gcd(b, a % b) : a;\r\n}\r\n\r\nexport {gcd};","import TasksBlock from '../TasksBlock';\r\nimport React from \"react\";\r\nimport QuestionWithWorkings from '../QuestionWithWorkings';\r\nimport QuestionTwoLiner from '../QuestionTwoLiner';\r\n\r\nimport R from './randoms';\r\nimport {gcd} from './maths';\r\n\r\nconst TYPE_STRAIGHT = 's';\r\nconst TYPE_REVERSE = 'r';\r\nconst TYPE_ADDITIVE = 'a';\r\n\r\nconst TYPES = [TYPE_STRAIGHT, TYPE_REVERSE, TYPE_ADDITIVE];\r\n\r\nconst PERCENTAGES = [1, 2, 3, 5, 10, 12, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 98, 99];\r\n\r\nconst DIRECTION_MORE = 'more';\r\nconst DIRECTION_LESS = 'less';\r\nconst DIRECTIONS = [DIRECTION_MORE, DIRECTION_LESS];\r\n\r\nclass Percentages extends TasksBlock {\r\n  constructor (start, count) {\r\n    super({\r\n      start, count,\r\n      questionTag: QuestionTwoLiner,\r\n      //questionTag: QuestionWithWorkings,\r\n      questionsPerRow: 2,\r\n      title: \"Percentages\",\r\n    });\r\n  }\r\n  getTask(i) {\r\n    let question, answer;\r\n    let pct = R.arr(PERCENTAGES);\r\n    let pctMult = 100 / gcd(100, pct);\r\n    let num_question = Math.ceil(Math.random() * 100) * pctMult;\r\n    let num_pct = num_question * pct / 100;\r\n\r\n    let type = R.arr(TYPES);\r\n    switch (type) {\r\n      case TYPE_STRAIGHT:\r\n        question = `What is ${pct}% of ${num_question}?`;\r\n        answer = num_pct;\r\n        break;\r\n      case TYPE_REVERSE:\r\n        question = `${num_pct} is ${pct}% of what number?`;\r\n        answer = num_question;\r\n        break;\r\n      case TYPE_ADDITIVE:\r\n        let direction = R.arr(DIRECTIONS);\r\n        question = `What number is ${pct}% ${direction} than ${num_question}`;\r\n        answer = num_question + (direction == DIRECTION_MORE ? 1 : -1) * num_pct;\r\n    }\r\n\r\n    return {question, answer}\r\n  }\r\n}\r\n\r\nexport default Percentages;","import TasksBlock from '../TasksBlock';\r\nimport React from \"react\";\r\nimport QuestionWithWorkings from '../QuestionWithWorkings';\r\nimport R from './randoms';\r\n\r\nclass Multiplication extends TasksBlock {\r\n  constructor (start, count) {\r\n    super({\r\n      start, count,\r\n      questionTag: QuestionWithWorkings,\r\n      questionsPerRow: 4,\r\n      title: \"Multiplication\",\r\n      description: \"\"\r\n    });\r\n  }\r\n  getTask(i) {\r\n    let a = 10 + Math.ceil(Math.random() * 89);\r\n    let b = 10 + Math.ceil(Math.random() * 89);\r\n    if (R.dice(0.2)) a += 100 * Math.ceil(Math.random() * 9);\r\n    if (R.dice(0.2)) b += 100 * Math.ceil(Math.random() * 9);\r\n\r\n    let question = `${a} × ${b}`;\r\n    let answer = a * b;\r\n\r\n    return {question, answer}\r\n  }\r\n}\r\n\r\nexport default Multiplication;","import TasksBlock from '../TasksBlock';\r\nimport React from \"react\";\r\nimport QuestionTwoLiner from '../QuestionTwoLiner';\r\nimport R from './randoms';\r\n\r\nclass Multiplication extends TasksBlock {\r\n  constructor (start, count) {\r\n    super({\r\n      start, count,\r\n      questionTag: QuestionTwoLiner,\r\n      questionsPerRow: 2,\r\n      title: \"Division\",\r\n      description: \"\"\r\n    });\r\n  }\r\n  getTask(i) {\r\n    let b = 1 + Math.ceil(Math.random() * 9);\r\n    if (R.dice()) b += Math.ceil(Math.random() * 89);\r\n\r\n    let m = 1 + Math.ceil(Math.random() * 9);\r\n    if (b < 11 || R.dice()) m += Math.ceil(Math.random() * 89);\r\n\r\n    let r = R.dice() ? 0 : Math.ceil(Math.random() * (b - 1));\r\n\r\n    let a = b * m + r;\r\n\r\n    let question = `${a} ÷ ${b}`;\r\n    let answer = m + (r ? `r${r}` : '');\r\n\r\n    return {question, answer}\r\n  }\r\n}\r\n\r\nexport default Multiplication;","import TasksBlock from '../TasksBlock';\r\nimport React from \"react\";\r\nimport QuestionWithWorkings from '../QuestionWithWorkings';\r\nimport R from './randoms';\r\n\r\nfunction getNumber () {\r\n  let n = 10 + Math.ceil(Math.random() * 89);\r\n  if (R.dice(0.5)) n += 100 * Math.ceil(Math.random() * 9);\r\n  if (R.dice(0.2)) n += 1000 * Math.ceil(Math.random() * 9);\r\n  return n;\r\n}\r\n\r\n\r\nclass AddSub extends TasksBlock {\r\n  constructor (start, count, level) {\r\n    super({\r\n      start, count,\r\n      questionTag: QuestionWithWorkings,\r\n      questionsPerRow: 4,\r\n      title: \"Addition and Subtraction\",\r\n      description: \"\"\r\n    });\r\n  }\r\n  getTask(i) {\r\n    let a = getNumber();\r\n    let b = getNumber();\r\n\r\n    let question, answer;\r\n\r\n    if (R.dice(0.5)) {\r\n      question = `${a} + ${b}`;\r\n      answer = a + b;\r\n    } else if (a > b) {\r\n      question = `${a} – ${b}`;\r\n      answer = a - b;\r\n    } else {\r\n      question = `${b} – ${a}`;\r\n      answer = b - a;\r\n    }\r\n\r\n    if (R.dice(0.33)) {\r\n      let c = getNumber();\r\n      if (R.dice(0.5) || answer < c) {\r\n        question += ` + ${c}`;\r\n        answer += c;\r\n      } else {\r\n        question += ` – ${c}`;\r\n        answer -= c;\r\n      }\r\n    }\r\n\r\n    return {question, answer}\r\n  }\r\n}\r\n\r\nexport default AddSub;","import React from 'react';\r\nimport TasksBlock from '../TasksBlock';\r\nimport './Fractions.css';\r\n\r\nimport R from './randoms';\r\nimport {gcd} from './maths';\r\n\r\nconst PLUS = '+';\r\nconst MINUS = '–';\r\nconst MULTIPLY = '×';\r\nconst DIVIDE = '÷';\r\n\r\nconst MAX_DENOMINATOR = 12;\r\nconst MAX_WHOLE = 50;\r\n\r\nfunction Fraction (props) {\r\n  return <table className=\"fraction\">\r\n    <tbody>\r\n    <tr>\r\n      { props.whole ? <td className=\"whole\" rowSpan=\"2\">{props.whole}</td> : false }\r\n      { props.numerator ? <td className=\"numerator\">{props.numerator}</td> : false }\r\n    </tr>\r\n    <tr>\r\n      { props.numerator ? <td className=\"denominator\">{props.denominator}</td> : false }\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n}\r\n\r\nfunction FractionSentence (props) {\r\n  // members = [[1,5],\"+\",[2,5]]\r\n  let r1 = [], r2 = [];\r\n  props.members.forEach((member) => {\r\n    if (typeof member === 'string') r1.push(<td className=\"operation\" rowSpan=\"2\">{member}</td>);\r\n    else {\r\n      if (member[0] || !member[1]) r1.push(<td className=\"whole\" rowSpan=\"2\">{member[0]}</td>);\r\n      if (member[1]) {\r\n        r1.push(<td className=\"numerator\">{member[1]}</td>);\r\n        r2.push(<td className=\"denominator\">{member[2]}</td>);\r\n      }\r\n    }\r\n  });\r\n\r\n  return <table className=\"fraction\">\r\n    <tbody>\r\n    <tr>{r1}</tr>\r\n    <tr>{r2}</tr>\r\n    </tbody>\r\n  </table>\r\n}\r\n\r\nfunction simplifyFraction (w, n, d) {\r\n  w += Math.trunc(n / d);\r\n  n %= d;\r\n  let g = gcd(n, d);\r\n  n /= g;\r\n  d /= g;\r\n  return [w, n, d];\r\n}\r\n\r\nfunction addFractions (f1, f2, sign) {\r\n  let [w1, n1, d1] = f1;\r\n  let [w2, n2, d2] = f2;\r\n  let d = d1 * d2;\r\n  n1 = n1 * d2 + w1 * d;\r\n  n2 = n2 * d1 + w2 * d;\r\n  let n = (sign === PLUS) ? (n1 + n2) : (n1 - n2);\r\n  return simplifyFraction(0, n, d);\r\n}\r\n\r\nfunction multiplyFractions (f1, f2, sign) {\r\n  let [w1, n1, d1] = f1;\r\n  let [w2, n2, d2] = f2;\r\n  n1 += w1 * d1;\r\n  n2 += w2 * d2;\r\n  let n = (sign === MULTIPLY) ? (n1 * n2) : (n1 * d2);\r\n  let d = (sign === MULTIPLY) ? (d1 * d2) : (d1 * n2);\r\n  return simplifyFraction(0, n, d);\r\n}\r\n\r\nfunction getFraction() {\r\n  let d = 1 + Math.ceil(Math.random() * (MAX_DENOMINATOR - 1));\r\n  let n = Math.ceil(Math.random() * (d - 1));\r\n  let w = R.dice() ? Math.ceil(Math.random() * MAX_WHOLE) : 0;\r\n  return simplifyFraction(w, n, d);\r\n}\r\n\r\nclass AddSubFractions extends TasksBlock {\r\n  constructor (start, count) {\r\n    super({\r\n      start, count,\r\n      questionsPerRow: 2,\r\n      title: \"Fractions Addition and Subtraction\",\r\n      description: \"Perform an operation and write the result in the most simplified way\"\r\n    });\r\n  }\r\n  getTask() {\r\n    let [w1, n1, d1] = getFraction();\r\n    let [w2, n2, d2] = getFraction();\r\n    let f1 = w1 + n1 / d1;\r\n    let f2 = w2 + n2 / d2;\r\n\r\n    let sign = (f1 < f2 || R.dice()) ? PLUS : MINUS;\r\n\r\n    let [wa, na, da] = addFractions([w1, n1, d1], [w2, n2, d2], sign);\r\n\r\n    return {\r\n      question: <FractionSentence members={[[w1, n1, d1], sign, [w2, n2, d2]]} />,\r\n      answer: <Fraction whole={wa} numerator={na} denominator={da} />\r\n    }\r\n  }\r\n}\r\n\r\nclass MulDivFractions extends TasksBlock {\r\n  constructor (start, count) {\r\n    super({\r\n      start, count,\r\n      questionsPerRow: 2,\r\n      title: \"Fractions Multiplication and Division\",\r\n      description: \"Perform an operation and write the result in the most simplified way\"\r\n    });\r\n  }\r\n  getTask() {\r\n    let [w1, n1, d1] = getFraction();\r\n    let [w2, n2, d2] = getFraction();\r\n\r\n    if (w1 > 9) w1 = 0;\r\n    if (w1 || w2 > 9) w2 = 0;\r\n\r\n    let sign = R.dice() ? MULTIPLY : DIVIDE;\r\n\r\n    let [wa, na, da] = multiplyFractions([w1, n1, d1], [w2, n2, d2], sign);\r\n\r\n    return {\r\n      question: <FractionSentence members={[[w1, n1, d1], sign, [w2, n2, d2]]} />,\r\n      answer: <Fraction whole={wa} numerator={na} denominator={da} />\r\n    }\r\n  }\r\n}\r\n\r\nexport {AddSubFractions, MulDivFractions};","import React from 'react';\r\nimport './QuestionLongTwoLiner.css';\r\n\r\nfunction QuestionLongTwoLiner (props) {\r\n  return (\r\n    <div className=\"question-long-twoliner\">\r\n      <div className=\"question\">{props.question}</div>\r\n      <div className=\"workings\">Workings</div>\r\n      <div className=\"answer\">Answer</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionLongTwoLiner;","import React from 'react';\r\nimport TasksBlock from '../TasksBlock';\r\nimport QuestionLongTwoLiner from '../QuestionLongTwoLiner';\r\n\r\nimport R from './randoms';\r\n\r\nconst TYPE_RANGE = 'r';\r\nconst TYPE_RANGE_INCLUSIVE = 'ri';\r\nconst TYPE_WEEKDAY = 'w';\r\nconst TASK_TYPES = [TYPE_RANGE, TYPE_RANGE_INCLUSIVE, TYPE_WEEKDAY];\r\n\r\nconst DATE_BEGIN = '2001-01-01T00:00:00Z';\r\nconst DATE_END = '2001-12-31T23:59:59Z';\r\n\r\nconst MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\nconst DAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\nconst MAX_RANGE = 50;\r\n\r\nfunction getRandomDate () {\r\n  let begin = (new Date(DATE_BEGIN)).getTime();\r\n  let end = (new Date(DATE_END)).getTime();\r\n\r\n  return new Date(begin + Math.random() * (end - begin));\r\n}\r\n\r\nfunction daysInMonth (date) {\r\n  let year = date.getUTCFullYear();\r\n  let month = date.getUTCMonth() + 1;\r\n  return new Date(year, month, 0).getUTCDate();\r\n}\r\n\r\nfunction dateToText (date) {\r\n  return date.getUTCDate() + ' ' + MONTHS[date.getUTCMonth()];\r\n}\r\n\r\nclass Dates extends TasksBlock {\r\n  constructor (start, count) {\r\n    super({\r\n      start, count,\r\n      questionTag: QuestionLongTwoLiner,\r\n      questionsPerRow: 2,\r\n      title: \"Date manipulations\",\r\n    });\r\n  }\r\n  getTask() {\r\n\r\n    let startDate = getRandomDate();\r\n\r\n    let daysUntilTheEndOfTheMonth = daysInMonth(startDate) - startDate.getUTCDate();\r\n    let range = daysUntilTheEndOfTheMonth + Math.ceil(Math.random() * (MAX_RANGE - daysUntilTheEndOfTheMonth));\r\n\r\n    let endDate = new Date(startDate);\r\n    endDate.setUTCDate(startDate.getUTCDate() + range);\r\n\r\n    let question, answer;\r\n\r\n    switch (R.arr(TASK_TYPES)) {\r\n      case TYPE_RANGE:\r\n        question = `Calculate number of days from ${dateToText(startDate)} to ${dateToText(endDate)}?`;\r\n        answer = range;\r\n        break;\r\n      case TYPE_RANGE_INCLUSIVE:\r\n        question = `Calculate number of days between ${dateToText(startDate)} and ${dateToText(endDate)} inclusive?`;\r\n        answer = range + 1;\r\n        break;\r\n      case TYPE_WEEKDAY:\r\n        question = `If ${dateToText(startDate)} was ${DAYS[startDate.getUTCDay()]} what day would be ${dateToText(endDate)}?`;\r\n        answer = DAYS[endDate.getUTCDay()];\r\n    }\r\n\r\n    return {question, answer}\r\n  }\r\n}\r\n\r\nexport default Dates;","import TasksBlock from '../TasksBlock';\r\n\r\nimport R from './randoms';\r\nimport QuestionWithWorkings from \"../QuestionWithWorkings\";\r\nimport QuestionTwoLiner from \"../QuestionTwoLiner\";\r\n\r\nconst PLUS = '+';\r\nconst MINUS = '–';\r\n\r\nconst MAX_NUMBER = 12;\r\nconst MAX_X = 12;\r\n\r\n\r\nfunction memberToText (n, v, vv) {\r\n  return `${!v || n !== 1 ? n : ''}${v}${vv}`;\r\n}\r\n\r\nclass Member {\r\n  constructor(number, variable) {\r\n    this.positive = number > 0;\r\n    this.value = (Math.abs(number) === 1 && variable ? '' : Math.abs(number)) + (variable || '');\r\n  }\r\n  reverse() {\r\n    this.positive = !this.positive;\r\n  }\r\n  print(first) {\r\n    let sign = '';\r\n    if (!first) sign += ' ' + (this.positive ? PLUS : MINUS) + ' ';\r\n    else if (!this.positive) sign += MINUS + ' ';\r\n    return sign + this.value;\r\n  }\r\n}\r\n\r\nclass Equation {\r\n  constructor() {\r\n    this.left = [];\r\n    this.right = [];\r\n  }\r\n  addLeft(number, variable) {\r\n    if (number) this.left.push(new Member(number, variable));\r\n  }\r\n  addRight(number, variable) {\r\n    if (number) this.right.push(new Member(number, variable));\r\n  }\r\n  static isAllNegatives(arr) {\r\n    for (const m of arr) if (m.positive) return false;\r\n    return true;\r\n  }\r\n  static shuffle(arr) {\r\n    let attempt = 0;\r\n    do {\r\n      R.shuffle(arr);\r\n      attempt++;\r\n    } while (!arr[0].positive && attempt < 10);\r\n  }\r\n  beautify() {\r\n    if (Equation.isAllNegatives(this.left) || Equation.isAllNegatives(this.right)) {\r\n      for (const m of this.left) m.reverse();\r\n      for (const m of this.right) m.reverse();\r\n    }\r\n    Equation.shuffle(this.left);\r\n    Equation.shuffle(this.right);\r\n  }\r\n  print() {\r\n    this.beautify();\r\n    let left = '', right = '';\r\n    this.left.forEach((m) => left += m.print(!left));\r\n    this.right.forEach((m) => right += m.print(!right));\r\n    return left + ' = ' + right;\r\n  }\r\n}\r\n\r\n\r\nclass LinearEquations extends TasksBlock {\r\n  constructor (start, count) {\r\n    super({\r\n      start, count,\r\n      questionTag: QuestionTwoLiner,\r\n      questionsPerRow: 1,\r\n      title: \"Linear Equations\",\r\n      description: \"Find the value of the variable\"\r\n    });\r\n  }\r\n  getTask() {\r\n    let v = R.arr(R.vars());\r\n    let answer = R.natural(MAX_X);\r\n\r\n    let cAll = R.natural(MAX_NUMBER);\r\n    let nAll = answer * cAll;\r\n\r\n    let cLeft = R.natural(MAX_NUMBER) * (R.dice() ? 1 : -1);\r\n    let cRight = cLeft - cAll;\r\n\r\n    let nRight = R.natural(MAX_X * MAX_NUMBER) * (R.dice() ? 1 : -1);\r\n    let nLeft = nRight - nAll;\r\n\r\n    let ccLeft = 0, nnLeft = 0, ccRight = 0, nnRight = 0;\r\n\r\n    if (R.dice(0.2)) {\r\n      ccLeft = R.natural(MAX_NUMBER) * (R.dice() ? 1 : -1);\r\n      cLeft -= ccLeft;\r\n    }\r\n\r\n    if (R.dice(0.2)) {\r\n      nnLeft = R.natural(MAX_X * MAX_NUMBER) * (R.dice() ? 1 : -1);\r\n      nLeft -= nnLeft;\r\n    }\r\n\r\n    if (R.dice(0.2)) {\r\n      ccRight = R.natural(MAX_NUMBER) * (R.dice() ? 1 : -1);\r\n      cRight -= ccRight;\r\n    }\r\n\r\n    if (R.dice(0.2)) {\r\n      nnRight = R.natural(MAX_X * MAX_NUMBER) * (R.dice() ? 1 : -1);\r\n      nRight -= nnRight;\r\n    }\r\n\r\n    let equation = new Equation();\r\n    equation.addLeft(cLeft, v);\r\n    equation.addLeft(ccLeft, v);\r\n    equation.addLeft(nLeft);\r\n    equation.addLeft(nnLeft);\r\n    equation.addRight(cRight, v);\r\n    equation.addRight(ccRight, v);\r\n    equation.addRight(nRight);\r\n    equation.addRight(nnRight);\r\n\r\n    let question = equation.print(); //`${cLeft}${v} ${nLeft} = ${cRight}${v} ${nRight}`;\r\n\r\n    return {question, answer};\r\n  }\r\n}\r\n\r\nexport default LinearEquations;","import Sample from \"./Sample\";\r\nimport {RemoveBrackets, AddBrackets} from \"./Brackets\";\r\nimport Percentages from \"./Percentages\";\r\nimport Multiplication from \"./Multiplication\";\r\nimport Division from \"./Division\";\r\nimport AddSub from \"./AddSub\";\r\nimport {AddSubFractions, MulDivFractions} from \"./Fractions\";\r\nimport Dates from \"./Dates\";\r\nimport LinearEquations from \"./LinearEquations\";\r\n\r\nexport default {\r\n  RemoveBrackets,\r\n  AddBrackets,\r\n  Percentages,\r\n  Multiplication,\r\n  Division,\r\n  AddSub,\r\n  AddSubFractions,\r\n  MulDivFractions,\r\n  Dates,\r\n  LinearEquations\r\n};","import React from 'react';\r\nimport './Editor.css';\r\n\r\nimport TaskTypes from './TaskTypes/index';\r\n\r\nclass Editor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskTypes: {},\r\n      title: \"\"\r\n    };\r\n    for(let tt in TaskTypes) this.state.taskTypes[tt] = new TaskTypes[tt]();\r\n    this.handleTitleChange = this.handleTitleChange.bind(this);\r\n    this.openWorksheet = this.openWorksheet.bind(this);\r\n  }\r\n  handleTitleChange(event) {\r\n    this.setState({title: event.target.value});\r\n  }\r\n  openWorksheet() {\r\n    const params = {title: this.state.title};\r\n    for(let tt in this.state.taskTypes) {\r\n      let count = this.state.taskTypes[tt].getCount();\r\n      if (count) params[tt] = count;\r\n    }\r\n    const uparams = new URLSearchParams(params);\r\n    window.open(\"./?\" + uparams.toString(), \"_blank\")\r\n  }\r\n  render () {\r\n    return (\r\n      <div className=\"editor\">\r\n        <div className=\"editor-block\">\r\n          <div className=\"title\"><b>Test Title</b></div>\r\n          <div className=\"input\"><input type=\"text\" value={this.state.title} onChange={this.handleTitleChange} /></div>\r\n        </div>\r\n        {Object.entries(this.state.taskTypes).map(([key, obj]) => obj.getEditorBlock())}\r\n        <div className=\"footer\">\r\n          <button onClick={this.openWorksheet}>Generate</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;","import React from 'react';\nimport Test from './Test';\nimport Editor from './Editor';\n\nimport TaskTypes from './TaskTypes/index';\n\nconst MODE_EDITOR = 1;\nconst MODE_TASKS = 2;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    let params = new URLSearchParams(window.location.search);\n    this.state = {\n      title: params.get('title') || \"Test\",\n      blocks: []\n    };\n    let start = 1;\n    for(let key of params.keys()) if (TaskTypes[key]) {\n      let count = parseInt(params.get(key));\n      if (count >= 1) {\n        this.state.blocks.push(new TaskTypes[key](start, count));\n        start += count;\n      }\n    }\n    this.state.mode = start > 1 ? MODE_TASKS : MODE_EDITOR;\n  }\n  render () {\n    return this.state.mode == MODE_TASKS ?\n      <Test title={this.state.title} blocks={this.state.blocks} /> :\n      <Editor />;\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}